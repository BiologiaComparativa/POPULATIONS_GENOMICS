set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2,colour=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values ="blue","green","red","purple","yellow")
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values ="blue","green","red","purple","yellow")
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
vcf_test<-read.vcfR("test.vcf")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
popid<-read.table("pops_id")
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values ="blue","green","red","purple","yellow")
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
p
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
popid<-read.table("pops_id")
x <- read.genepop("stacks_p5.test.gen", ncode=2L)
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
cols=c("blue","yellow","red","purple","orange")
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=2)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p
windowsFonts()
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme(family = "Times New Roman")
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman", color = "black"))
p
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
p
library
library
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
cols=c("blue","yellow","red","purple","orange")
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
p
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
p <- p + geom_text(size=22)
p
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman", size=22),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
p <- p + geom_text(size=22)
p
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman", size=22),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
p
## DAPC
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
## DAPC
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
scatter(coco.dapc, col = cols, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", cleg = 0.75)
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
x <- read.genepop("stacks_p5.test.gen", ncode=2L)
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
png("./PCA Eigenvalues", width = 800, height = 600)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
dev.off()
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
cols=c("blue","yellow","red","purple","orange")
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman", size=22),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
png("./ind_PCA", width = 800, height = 600)
dev.off()
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
png("./PCA_Eigenvalues", width = 800, height = 600)
par(family = "Times New Roman",cex=1.4)
barplot(100*coco.pca$eig/sum(coco.pca$eig), col = "black", main="PCA Eigenvalues")
title(ylab="Percent of variance\nexplained", line = 2)
title(xlab="Eigenvalues", line = 1)
dev.off()
# PCA GRAPH
coco.pca.scores <- as.data.frame(coco.pca$scores)
coco.pca.scores$pop <- pop(gl.coco)
cols=c("blue","yellow","red","purple","orange")
library(ggplot2)
set.seed(9)
p <- ggplot(coco.pca.scores, aes(x=PC1, y=PC2, colour=pop, shape=pop))
p <- p + geom_point(size=4)
p <- p + stat_ellipse(level = 0.65, size = 2)
p <- p + scale_color_manual(values = cols)
p <- p + geom_hline(yintercept = 0)
p <- p + geom_vline(xintercept = 0)
p <- p + theme_bw()
p <- p + theme( text = element_text(family = "Times New Roman", size=22),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
png("./ind_PCA", width = 800, height = 600)
p
dev.off()
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
x <- read.genepop("stacks_p5.test.gen", ncode=2L)
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## PCA GENELIGHT
# PCA EIGENVALUES
coco.pca <- glPca(gl.coco, nf = 3)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
nrow(gl.coco)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)14
100
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
popid<-read.table("pops_id")
### geneligh####
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=40)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
1
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
2
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
nrow(gl.coco)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=15)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=14)
coco.clusters <- find.clusters(gl.coco, max.n.clust=4)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=15)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=20)
coco.clusters <- find.clusters(gl.coco, max.n.clust=14)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=120)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=20)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=14)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=8)
## DAPC
coco.clusters <- find.clusters(gl.coco, max.n.clust=8,stat = "BIC",method = "ward")
coco.clusters <- find.clusters(gl.coco, max.n.clust=8,stat = "AIC")
coco.clusters <- find.clusters(gl.coco, max.n.clust=8,stat = "WSS")
coco.clusters <- find.clusters(gl.coco, max.n.clust=8,stat = "BIC")
compoplot(coco.dapc,col = cols, posi = 'top')
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
compoplot(coco.dapc,col = cols, posi = 'top')
compoplot(coco.dapc, posi = 'top')
setwd("./test")
library(vcfR)
library(poppr)
library(ape)
library(RColorBrewer)
library(adegenet)
library(hierfstat)
popid<-read.table("pops_id")
x <- read.genepop("stacks_p5.test.gen", ncode=2L)
test_site<-genind2hierfstat(x,pop = popid[2])
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
scatter(coco.dapc, col = cols, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", cleg = 0.75)
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
coco.dapc <- dapc(gl.coco, n.pca = 3, n.da = 2)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", cleg = 0.75)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 5, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 1, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, ra, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.25, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 1)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 1, cex.lab=21)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 1, cex.lab=100)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 2)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.3, cleg = 1.5)
scatter(coco.dapc, cex = 2, legend = TRUE, clabel = F, posi.leg = "bottomleft", scree.pca = TRUE,
posi.pca = "topleft", ratio.pca = 0.25, cleg = 1.2)
library("poppr")
set.seed(999)
dapcval <- xvalDapc(tab(gl.coco, NA.method = "mean"), pop(gl.coco))
dapcval
# pensar en la idea de no poner el table ese que no dice nada y mejor un compoplot por departamento
install.packages("igraph")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
popid<-read.table("pops_id")
setwd("./test/")
popid<-read.table("pops_id")
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
library(vcfR)
library(poppr)
library(ape)
library(RColorBrewer)
### geneligh####
vcf_test<-read.vcfR("test.vcf")
gl.coco <- vcfR2genlight(vcf_test)
ploidy(gl.coco) <- 2
pop(gl.coco) <- popid[,3]
# pensar en la idea de no poner el table ese que no dice nada y mejor un compoplot por departamento
#install.packages("igraph")
library(igraph)
coco.dist <- bitwise.dist(gl.coco)
coco.msn <- poppr.msn(coco.rubi, coco.dist, showplot = FALSE, include.ties = T)
coco.msn <- poppr.msn(gl.coco, coco.dist, showplot = FALSE, include.ties = T)
node.size <- rep(2, times = nInd(gl.coco))
names(node.size) <- indNames(gl.coco)
vertex.attributes(coco.msn$graph)$size <- node.size
set.seed(9)
plot_poppr_msn(coco.rubi, coco.msn , palette = brewer.pal(n = nPop(gl.coco), name = "Dark2"), gadj = 70)
plot_poppr_msn(gl.coco, coco.msn , palette = brewer.pal(n = nPop(gl.coco), name = "Dark2"), gadj = 70)
cols=c("blue","yellow","red","purple","orange")
par(family = "Times New Roman",cex=1.4)
plot_poppr_msn(gl.coco, coco.msn , palette = brewer.pal(n = nPop(gl.coco), name = "cols"), gadj = 70)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols"), gadj = 70)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70)
set.seed(123123)
par(family = "Times New Roman",cex=1.4)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70)
par(family = "Times New Roman",cex=1.4)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70,pch = 19:22)
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70,pch = c(19:22))
plot_poppr_msn(gl.coco, coco.msn , palette = cols , name = "cols", gadj = 70,pch = cols)
